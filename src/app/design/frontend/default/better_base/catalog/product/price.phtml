<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php
/**
 * Template for displaying product price in different places (products grid, product view page etc)
 *
 * @see Mage_Catalog_Block_Product_Abstract
 */
?>
<?php
    /** @var Mage_Catalog_Block_Product_Price $this */
    $_coreHelper = $this->helper('core');
    $_weeeHelper = $this->helper('weee');
    $_taxHelper  = $this->helper('tax');
    /* @var $_coreHelper Mage_Core_Helper_Data */
    /* @var $_weeeHelper Mage_Weee_Helper_Data */
    /* @var $_taxHelper Mage_Tax_Helper_Data */

    /** @var Mage_Catalog_Model_Product $_product */
    $_product = $this->getProduct();
    $_storeId = $_product->getStoreId();
    $_id = $_product->getId();
    $_weeeSeparator = '';
    $_simplePricesTax = ($_taxHelper->displayPriceIncludingTax() || $_taxHelper->displayBothPrices());
    $_minimalPriceValue = $_product->getMinimalPrice();
    $_minimalPrice = $_taxHelper->getPrice($_product, $_minimalPriceValue, $_simplePricesTax);
    $_specialPriceStoreLabel = $this->getProductAttribute('special_price')->getStoreLabel();
?>
<?php

    /* needed workaround for using block in anonymous function */
    $thisBlock = $this;

    /**
     * @param $price
     * @param $priceIdPrefix
     */
    $f_returnPrice = function( $price, $priceIdPrefix) use($_id,$thisBlock,$_coreHelper){
        $priceContent = $_coreHelper->currency($price, true, false);
        return "<span class=\"price\" id=\"{$priceIdPrefix}{$_id}{$thisBlock->getIdSuffix()}\">
                {$priceContent}
            </span>";
    };

    $f_returnRegularPrice = function( $price, $addId = true ) use($_id,$thisBlock,$_coreHelper){
        $priceContent = $_coreHelper->currency($price, true, true);
        $idString = $addId ? "id=\"product-price-{$_id}{$thisBlock->getIdSuffix()}\"": "";
        return "<span class=\"regular-price\" {$idString}>
                {$priceContent}
            </span>";
    };
  
    /**
     * @param $label
     * @param $price
     * @param $priceIdPrefix
     */
    $f_priceLabelPair = function( $label, $price, $priceIdPrefix) use($_id,$thisBlock,$f_returnPrice){
        ?>
            <span class="label"><?=$label?></span>
            <?=$f_returnPrice($price, $priceIdPrefix)?>
        <?php
    };

    /**
     * @param $label
     * @param $price
     * @param $taxInfo string can be "excluding" or "including"
     */
    $f_priceLabelPairWithWrapper = function( $price, $taxInfo ) use ($f_priceLabelPair){
        $label = '';
        if( $taxInfo == "excluding"){ $label = $this->helper('tax')->__('Excl. Tax:'); };
        if( $taxInfo == "including"){ $label = $this->helper('tax')->__('Incl. Tax:'); };
        ?>
        <span class="price-<?=$taxInfo?>-tax">
            <?php $f_priceLabelPair( $label, $price, "price-{$taxInfo}-tax-");?>
        </span>
        <?php
    };


    $f_returnWeee = function($_weeeTaxAttributes, $addTaxAmount = false) use ($_weeeSeparator,$_coreHelper){
        $result = "";
        $result .= '<span class="weee">(';
        foreach ($_weeeTaxAttributes as $_weeeTaxAttribute):
            $amount = $_weeeTaxAttribute->getAmount();
            if($addTaxAmount){
                $amount += $_weeeTaxAttribute->getTaxAmount();
            }
            $result .= $_weeeSeparator;
            $result .= $_weeeTaxAttribute->getName() 
              . ': '
              . $_coreHelper->currency($amount, true, true);
            $_weeeSeparator = ' + ';
        endforeach;
        $result .= ')</span>';
    }

?>

<?php if (!$_product->isGrouped()): ?>
    <?php $_weeeTaxAmount = $_weeeHelper->getAmountForDisplay($_product); ?>
    <?php if ($_weeeHelper->typeOfDisplay($_product, array(Mage_Weee_Model_Tax::DISPLAY_INCL_DESCR, Mage_Weee_Model_Tax::DISPLAY_EXCL_DESCR_INCL, 4))): ?>
        <?php $_weeeTaxAmount = $_weeeHelper->getAmount($_product); ?>
        <?php $_weeeTaxAttributes = $_weeeHelper->getProductWeeeAttributesForDisplay($_product); ?>
    <?php endif; ?>
    <?php $_weeeTaxAmountInclTaxes = $_weeeTaxAmount; ?>
    <?php if ($_weeeHelper->isTaxable() && !$_taxHelper->priceIncludesTax($_storeId)): ?>
        <?php $_attributes = $_weeeHelper->getProductWeeeAttributesForRenderer($_product, null, null, null, true); ?>
        <?php $_weeeTaxAmountInclTaxes = $_weeeHelper->getAmountInclTaxes($_attributes); ?>
    <?php endif; ?>

    <div class="price-box">
    <?php $_price = $_taxHelper->getPrice($_product, $_product->getPrice()) ?>
    <?php $_regularPrice = $_taxHelper->getPrice($_product, $_product->getPrice(), $_simplePricesTax) ?>
    <?php $_finalPrice = $_taxHelper->getPrice($_product, $_product->getFinalPrice()) ?>
    <?php $_finalPriceInclTax = $_taxHelper->getPrice($_product, $_product->getFinalPrice(), true) ?>
    <?php $_weeeDisplayType = $_weeeHelper->getPriceDisplayType(); ?>
    <?php if ($_finalPrice >= $_price): ?>
        <?php if ($_taxHelper->displayBothPrices()): ?>
            <?php if ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 0)): // including ?>
                <?php $f_priceLabelPairWithWrapper($_price + $_weeeTaxAmount,"excluding"); ?>
                <?php $f_priceLabelPairWithWrapper($_finalPriceInclTax + $_weeeTaxAmountInclTaxes,"including"); ?>
            <?php elseif ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 1)): // incl. + weee ?>
                <?php $f_priceLabelPairWithWrapper($_price + $_weeeTaxAmount,"excluding"); ?>
                <?=$f_returnWeee($_weeeTaxAttributes)?>
                <?php $f_priceLabelPairWithWrapper($_finalPriceInclTax + $_weeeTaxAmountInclTaxes,"including"); ?>
            <?php elseif ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 4)): // incl. + weee ?>
                <?php $f_priceLabelPairWithWrapper($_price + $_weeeTaxAmount,"excluding"); ?>
                <span class="price-including-tax">
                    <span class="label"><?php echo $this->helper('tax')->__('Incl. Tax:') ?></span>
                    <?=$f_returnPrice( $_finalPriceInclTax + $_weeeTaxAmountInclTaxes, 'price-including-tax-')?>
                    <?=$f_returnWeee($_weeeTaxAttributes, true)?>
                </span>
            <?php elseif ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 2)): // excl. + weee + final ?>
                <?php $f_priceLabelPairWithWrapper($_price,"excluding"); ?>
                <?php foreach ($_weeeTaxAttributes as $_weeeTaxAttribute): ?>
                    <span class="weee">
                        <?php echo $_weeeTaxAttribute->getName(); ?>: <?php echo $_coreHelper->currency($_weeeTaxAttribute->getAmount(), true, true); ?>
                    </span>
                <?php endforeach; ?>
                <?php $f_priceLabelPairWithWrapper($_finalPriceInclTax + $_weeeTaxAmountInclTaxes,"including"); ?>
            <?php else: ?>
                <?php $f_priceLabelPairWithWrapper( ($_finalPrice == $_price)?$_price:$_finalPrice ,"excluding"); ?>
                <?php $f_priceLabelPairWithWrapper($_finalPriceInclTax,"including"); ?>
            <?php endif; ?>
        <?php else: ?>
            <?php if ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 0)): // including ?>
                <?=$f_returnRegularPrice($_price + $_weeeTaxAmount)?>
            <?php elseif ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 1)): // incl. + weee ?>
                <?=$f_returnRegularPrice($_price + $_weeeTaxAmount)?>
                <?=$f_returnWeee($_weeeTaxAttributes)?>
            <?php elseif ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 4)): // incl. + weee ?>
                <?=$f_returnRegularPrice($_price + $_weeeTaxAmount)?>
                <?=$f_returnWeee($_weeeTaxAttributes, true)?>
            <?php elseif ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, 2)): // excl. + weee + final ?>
                <?=$f_returnRegularPrice($_price,false)?><br />
                <?php foreach ($_weeeTaxAttributes as $_weeeTaxAttribute): ?>
                    <span class="weee">
                        <?php echo $_weeeTaxAttribute->getName(); ?>: <?php echo $_coreHelper->currency($_weeeTaxAttribute->getAmount(), true, true); ?>
                    </span>
                <?php endforeach; ?>
                <?=$f_returnRegularPrice($_price + $_weeeTaxAmount)?>
            <?php else: ?>
                <?=$f_returnRegularPrice( ($_finalPrice == $_price)?$_price:$_finalPrice )?>
            <?php endif; ?>
        <?php endif; ?>
    <?php else: /* if ($_finalPrice == $_price): */ ?>
        <?php include "price/special_price.phtml"; ?>
    <?php endif; /* if ($_finalPrice == $_price): */ ?>

    <?php if ($this->getDisplayMinimalPrice() && $_minimalPriceValue && $_minimalPriceValue < $_product->getFinalPrice()): ?>

        <?php $_minimalPriceDisplayValue = $_minimalPrice; ?>
        <?php if ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, array(0, 1, 4))): ?>
            <?php $_minimalPriceDisplayValue = $_minimalPrice + $_weeeTaxAmount; ?>
        <?php endif; ?>

        <?php if ($this->getUseLinkForAsLowAs()):?>
        <a href="<?php echo $_product->getProductUrl(); ?>" class="minimal-price-link">
        <?php else:?>
        <span class="minimal-price-link">
        <?php endif?>
            <span class="label"><?php echo $this->__('As low as:') ?></span>
            <?=$f_returnPrice( $_minimalPriceDisplayValue, 'product-minimal-price-')?>
        <?php if ($this->getUseLinkForAsLowAs()):?>
        </a>
        <?php else:?>
        </span>
        <?php endif?>
    <?php endif; /* if ($this->getDisplayMinimalPrice() && $_minimalPrice && $_minimalPrice < $_finalPrice): */ ?>
    </div>

<?php else: /* if (!$_product->isGrouped()): */ ?>
    <?php include 'price/is_grouped.phtml'; ?>
<?php endif; /* if (!$_product->isGrouped()): */ ?>
